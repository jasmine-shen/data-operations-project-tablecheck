# -*- coding: utf-8 -*-
"""data check.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ef6eeweRcrA26LmauAuCeIaCPR9IRn7i
"""

import pandas as pd
url = "https://raw.githubusercontent.com/TableCheck-Labs/tablecheck-data-operations-take-home/main/data/data.csv"
data = pd.read_csv(url)

data.head()

# check: how big the file is? Not big.
total_rows = len(data)
print(f"Total number of rows: {total_rows}")

# check: the data type of each columns
data_types = data.dtypes
print("Data types for each column:")
print(data_types)

# check: how many distinct restaurants?
distinct_restaurant_names = data['restaurant_names'].nunique()
print(f"Distinct restaurant name count: {distinct_restaurant_names}")

# list: all the distinct restaurant names: no caps/lower case issues here
restaurant_names_list = data['restaurant_names'].unique()
print(restaurant_names_list)

# check: how many distinct food names/dishes?
distinct_food_names = data['food_names'].nunique()
print(f"Distinct food name count: {distinct_food_names}")

# list: all the distinct food names: no caps/lower case issues here
food_name_list = data['food_names'].unique()
print(food_name_list)

# check: does each restaurant sell different dishes? do restaurants sell some of the same dishes? Each restaurant sells exactly 34 dishes..
dishes_restaurants = {}
for i in range(len(data)):
  dish = data.loc[i, 'food_names']
  restaurant = data.loc[i, 'restaurant_names']
  if dish not in dishes_restaurants:
    dishes_restaurants[dish] = [restaurant]
  else:
    if restaurant not in dishes_restaurants[dish]:
      dishes_restaurants[dish].append(restaurant)

multi_restaurant_dishes = {dish: restaurants for dish, restaurants in dishes_restaurants.items() if len(restaurants) > 1}
multi_restaurant_dishes_count = len(multi_restaurant_dishes)

print(f"Total number of dishes sold in more than 1 restaurant: {multi_restaurant_dishes_count}")

for dish, restaurants in multi_restaurant_dishes.items():
  print(f"{dish}: {restaurants}")

# check: how many distinct customers?
distinct_customer_name=data['first_name'].nunique()
print(f"Distinct customer name count: {distinct_customer_name}")

# list: all the distinct customer first names: no caps/lower case issues here
first_name_list = data['first_name'].unique()
print(first_name_list)

# check: for the same dish in each restaurant, does the food cost always the same? No.
grouped_data = data.groupby(['restaurant_names', 'food_names'])
is_food_cost_same = grouped_data['food_cost'].apply(lambda x: x.nunique() == 1)
print(is_food_cost_same)

